# Generated by Django 5.1.7 on 2025-06-23 15:32

import ckeditor_uploader.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('icon', models.CharField(blank=True, help_text="Font Awesome icon class (e.g., 'fas fa-desktop')", max_length=50, null=True)),
                ('display_on_menu', models.BooleanField(default=True, help_text='Check to display this category in the **left sidebar menu**.')),
                ('display_on_header', models.BooleanField(default=False, help_text='Check to display this category in the **main header navigation**.')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('image', models.ImageField(default='software/placeholder.png', upload_to='software_images/')),
                ('homepage_description', models.TextField(blank=True, help_text='A concise description specifically for display on the homepage cards.', verbose_name='Homepage Short Description')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('operating_system', models.CharField(blank=True, max_length=100, null=True)),
                ('license_type', models.CharField(blank=True, max_length=100, null=True)),
                ('website_link', models.URLField(blank=True, null=True)),
                ('installation_guide', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('requirements', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('file_size', models.CharField(blank=True, max_length=50, null=True)),
                ('screenshots', models.JSONField(blank=True, null=True)),
                ('download_count', models.PositiveIntegerField(default=0, help_text="Number of times the software has been downloaded or viewed (for 'Reputation').")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='software_items', to='software.category')),
            ],
            options={
                'verbose_name_plural': 'Software',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SoftwareDownloadPageVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.CharField(help_text='Version for the download page, e.g., 1.0.0, 2.1 Beta', max_length=50)),
                ('display_title', models.CharField(blank=True, help_text="Custom title for this version on the download page (e.g., 'Latest Release', 'Old Version with Fixes').", max_length=255, null=True)),
                ('release_date', models.DateField(blank=True, help_text='Release date displayed on the download page.', null=True)),
                ('additional_info', models.CharField(blank=True, help_text="Short note for this specific download page version (e.g., 'Recommended', 'Beta').", max_length=255, null=True)),
                ('software', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='download_page_versions', to='software.software')),
            ],
            options={
                'verbose_name': 'Download Page Version',
                'verbose_name_plural': 'Download Page Versions',
                'ordering': ['-release_date', '-version_number'],
                'unique_together': {('software', 'version_number')},
            },
        ),
        migrations.CreateModel(
            name='SoftwareVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.CharField(help_text='e.g., 1.0.0, 2.1 Beta', max_length=50)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('download_link_url', models.URLField(blank=True, help_text='Primary download link for this version.', max_length=500, null=True)),
                ('is_current_version', models.BooleanField(default=False, help_text='Check this for the latest downloadable version.')),
                ('additional_info', models.CharField(blank=True, help_text="Short note or link for this version (e.g., 'Bug fixes', 'View release notes')", max_length=255, null=True)),
                ('software', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='software.software')),
            ],
            options={
                'verbose_name': 'Software Version',
                'verbose_name_plural': 'Software Versions',
                'ordering': ['-release_date', '-version_number'],
                'unique_together': {('software', 'version_number')},
            },
        ),
        migrations.CreateModel(
            name='DownloadPageSpecificLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Title for the download link (e.g., '64-bit Installer', 'Portable Version').", max_length=100)),
                ('url', models.URLField(help_text='The actual URL for this specific download.', max_length=500)),
                ('file_size', models.CharField(blank=True, help_text="File size (e.g., '150 MB', '2.3 GB').", max_length=50, null=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in which these links are displayed on the download page.')),
                ('version_for_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specific_download_links', to='software.softwaredownloadpageversion')),
            ],
            options={
                'verbose_name': 'Download Page Specific Link',
                'verbose_name_plural': 'Download Page Specific Links',
                'ordering': ['order', 'name'],
                'unique_together': {('version_for_page', 'name')},
            },
        ),
        migrations.CreateModel(
            name='DownloadLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., 'Direct Download', 'Mirror 1', 'Google Drive'", max_length=100)),
                ('url', models.URLField(help_text='The actual URL for this download link.', max_length=500)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in which links are displayed.')),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='download_links', to='software.softwareversion')),
            ],
            options={
                'verbose_name': 'Download Link',
                'verbose_name_plural': 'Download Links',
                'ordering': ['order', 'name'],
                'unique_together': {('version', 'name')},
            },
        ),
    ]
